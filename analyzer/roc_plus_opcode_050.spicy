module ROC_PLUS_OPCODE_050;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;

type IOPointPosition = unit(packetType: ROC_PLUS_ENUMS::PacketType, dataLength : uint8) {
    switch(packetType) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : IOPointPosition_Request();
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : IOPointPosition_Response(dataLength);
        ROC_PLUS_ENUMS::PacketType::UNKNOWN  -> unknown  : IOPointPosition_Unknown();
    };
};

type IOPointPosition_Request = unit {
    ioDataToReq : uint8 &convert=ROC_PLUS_ENUMS::IODataType($$);
};

type IOPointPosition_Response = unit(dataLength : uint8) {
    ioData : bytes &size=dataLength;
};

type IOPointPosition_Unknown = unit {
    # This opcode should always be a request or a response
};