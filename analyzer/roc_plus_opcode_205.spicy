module ROC_PLUS_OPCODE_205;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;
import ROC_PLUS_GLOBALS;

# ROC Plus Protocol Specifications Manual 2-42
type PeerToPeerNetworkMessages = unit (dataLength: uint8) {
    switch(ROC_PLUS_GLOBALS::PACKET_TYPE_GLOBAL) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : PeerToPeerNetworkMessagesRequest;
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : PeerToPeerNetworkMessagesResponse;
        ROC_PLUS_ENUMS::PacketType::UNKNOWN  -> unknown  : PeerToPeerNetworkMessagesUnknown(dataLength);
    };
};

type PeerToPeerNetworkMessagesUnknown = unit (dataLength: uint8) {
    data : bytes &size=(dataLength) &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
};

type PeerToPeerNetworkMessagesRequest = unit {
    # 1 - 255
    networkID                        : uint8;
    commissionedIndexOneBased        : uint8;
    embeddedRocOpcode                : uint8;
    embeddedRequestLength            : uint8;
    embeddedRequestData              : bytes &size=self.embeddedRequestLength;
};

type PeerToPeerNetworkMessagesResponse = unit {
    # 1 - 255
    networkID                        : uint8;
    commissionedIndexOneBased        : uint32;
    embeddedRocOpcode                : uint8;
    embeddedResponseLength           : uint8;
    embeddedRequestDataResponse      : bytes &size=self.embeddedResponseLength;
};