module ROC_PLUS_OPCODE_108;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;

type RequestHistoryTagAndPeriodicIndex_HistoricalPoints = unit {
    historicalPoint : uint8 &convert=ROC_PLUS_FUNCTIONS::uintToHexString($$);
};

type RequestHistoryTagAndPeriodicIndex = unit(packetType: ROC_PLUS_ENUMS::PacketType) {
    switch(packetType) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : RequestHistoryTagAndPeriodicIndexRequest();
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : RequestHistoryTagAndPeriodicIndexResponse();
        ROC_PLUS_ENUMS::PacketType::UNKNOWN  -> unknown  : RequestHistoryTagAndPeriodicIndexUnknown();
    };
};

type RequestHistoryTagAndPeriodicIndexRequest = unit {
    historySegment   : uint8;
    numPoints        : uint8;
    historicalPoints : RequestHistoryTagAndPeriodicIndex_HistoricalPoints[self.numPoints];
};

type RequestHistoryTagAndPeriodicIndexResponse = unit {
    historySegment   : uint8;
    numPoints        : uint8;
    periodicIndex    : uint16;
    historicalPoints : RequestHistoryTagAndPeriodicIndex_HistoricalPoints[self.numPoints];
    tag              : bytes &size=10 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
};

type RequestHistoryTagAndPeriodicIndexUnknown = unit {
    # If data length field is less than 23 but greater than 15 we are UNKNOWN 
};