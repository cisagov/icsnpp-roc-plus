module ROC_PLUS_OPCODE_006;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;

type SystemConfiguration = unit(packetType: ROC_PLUS_ENUMS::PacketType) {
    switch(packetType) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : SystemConfiguration_Request();
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : SystemConfiguration_Response();
        ROC_PLUS_ENUMS::PacketType::UNKNOWN  -> unknown  : SystemConfiguration_Unknown();
    };
};

type SystemConfiguration_Unknown = unit {
    # This opcode should always be a request or a response
};

type SystemConfiguration_Request = unit {
    # System configuration request does not contain any data
};

type SystemConfiguration_Response = unit {
    systemMode                 : uint8 &convert=ROC_PLUS_ENUMS::SystemMode($$);
    portNumber                 : uint16;
    securityAccessMode         : uint8;
    logicalCompatabilityStatus : uint8 &convert=ROC_PLUS_ENUMS::LogicalCompatabilityStatus($$);
    opcodeRevision             : uint8 &convert=ROC_PLUS_ENUMS::Revision($$);
    subtype                    : uint8 &convert=ROC_PLUS_ENUMS::Subtype($$);

    reserved                   : bytes &size=11;

    typeOfROC                  : uint8 &convert=ROC_PLUS_ENUMS::TypeOfROC($$);

    pointTypes                 : uint8[195]; #Point Type 60 - Point Type 255 - see Table 2-2

    # on %done {
    #     print self;
    # }
};