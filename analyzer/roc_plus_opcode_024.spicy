module ROC_PLUS_OPCODE_024;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;
import ROC_PLUS_GLOBALS;

type StoreAndForward = unit(dataLength : uint8) {
    switch(ROC_PLUS_GLOBALS::PACKET_TYPE_GLOBAL) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : StoreAndForwardRequest(dataLength);
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : StoreAndForwardResponse();
    };
};

type StoreAndForwardRequest = unit(dataLength : uint8) {
    hostAddress     : uint8;
    hostGroup       : uint8;
    dest1Address    : uint8;
    dest1Group      : uint8;
    dest2Address    : uint8;
    dest2Group      : uint8;
    dest3Address    : uint8;
    dest3Group      : uint8;
    dest4Address    : uint8;
    dest4Group      : uint8;
    desiredOpcode   : uint8;
    numDataBytes    : uint8;
    opcodeData      : bytes &size=(dataLength - 12); # Subtract previous fields in bytes
};

type StoreAndForwardResponse = unit {
    # Response is empty
};