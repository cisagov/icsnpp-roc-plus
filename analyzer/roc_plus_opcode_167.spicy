module ROC_PLUS_OPCODE_167;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;

type RequestSinglePointParameters = unit(packetType: ROC_PLUS_ENUMS::PacketType, dataLength : uint8) {
    switch(packetType) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : RequestSinglePointParametersRequest();
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : RequestSinglePointParametersResponse(dataLength);
        ROC_PLUS_ENUMS::PacketType::UNKNOWN  -> unknown  : RequestSinglePointParametersUnknown();
    };
};

type RequestSinglePointParametersUnknown = unit {
    # This opcode should always be a request or a response
};

type RequestSinglePointParametersRequest = unit {
    pointType           : uint8;
    pointLogicNumber    : uint8;
    numParameters       : uint8;
    startParameterNum   : uint8;
};

type RequestSinglePointParametersResponse = unit(dataLength : uint8) {
    pointType           : uint8;
    pointLogicNumber    : uint8;
    numParameters       : uint8;
    startParameterNum   : uint8;
    parameterData       : bytes &size=(dataLength - 4) &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
};