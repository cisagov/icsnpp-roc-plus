module ROC_PLUS_OPCODE_105;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;
import ROC_PLUS_GLOBALS;

#
# Opcode 105 - Request Today's and Yesterday's Min/Max Values
#
type RequestTodayYesterdayMinMaxValues = unit {
    switch(ROC_PLUS_GLOBALS::PACKET_TYPE_GLOBAL) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : RequestTodayYesterdayMinMaxValsRequest();
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : RequestTodayYesterdayMinMaxValsResponse();
    };
};

type RequestTodayYesterdayMinMaxValsRequest = unit {
    historySegment        : uint8;
    historicalPointNumber : uint8;
};

type RequestTodayYesterdayMinMaxValsResponse = unit {
    var timeOfMinValueOccurrence : time;
    var timeOfMaxValueOccurrence : time;
    var timeOfYesterdayMinValue  : time;
    var timeOfYesterdayMaxValue  : time;

    historySegment                 : uint8;
    historicalPointNumber          : uint8;
    historicalArchivalMethod       : uint8;
    pointType                      : uint8;
    pointLogicNumber               : uint8;
    parameterNumber                : uint8;
    currentValue                   : uint32;
    minimumValueSinceContract      : uint32;
    maximumValueSinceContract      : uint32;
    minValueOccurenceTime          : bytes &size=5;
    on minValueOccurenceTime {
        self.timeOfMinValueOccurrence = spicy::strptime(ROC_PLUS_FUNCTIONS::bytesToHexString(self.minValueOccurenceTime), "%s,%m,%h,%d,%M");
    }
    maxValueOccurenceTime          : bytes &size=5;
    on maxValueOccurenceTime {
        self.timeOfMaxValueOccurrence = spicy::strptime(ROC_PLUS_FUNCTIONS::bytesToHexString(self.maxValueOccurenceTime), "%s,%m,%h,%d,%M");
    }
    minimumValueYesterday          : uint32;
    maximumValueYesterday          : uint32;
    minValueTimeYesterday          : bytes &size=5;
    on minValueTimeYesterday {
        self.timeOfYesterdayMinValue = spicy::strptime(ROC_PLUS_FUNCTIONS::bytesToHexString(self.minValueTimeYesterday), "%s,%m,%h,%d,%M");
    }
    maxValueTimeYesterday          : bytes &size=5;
    on maxValueTimeYesterday {
        self.timeOfYesterdayMaxValue = spicy::strptime(ROC_PLUS_FUNCTIONS::bytesToHexString(self.maxValueTimeYesterday), "%s,%m,%h,%d,%M");
    }
    valueDuringLastCompletedPeriod : uint32;

    # on %done {
    #     print self;
    # }
};