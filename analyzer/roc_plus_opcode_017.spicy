module ROC_PLUS_OPCODE_017;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;
import ROC_PLUS_GLOBALS;

type Login = unit(dataLength: uint8) {
    var op17Type : ROC_PLUS_ENUMS::Opcode17Type = ROC_PLUS_FUNCTIONS::determineOpcode17SubType(dataLength);
    
    switch(ROC_PLUS_GLOBALS::PACKET_TYPE_GLOBAL) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : LoginRequest(self.op17Type, dataLength);
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : LoginResponse(self.op17Type);
    };
};

type LoginResponse = unit(op17Type: ROC_PLUS_ENUMS::Opcode17Type) {
    switch (op17Type) {
        ROC_PLUS_ENUMS::Opcode17Type::WRAPPED_SESSION_KEY -> wrappedSessionKey : Wrapped_Session_Key();
        ROC_PLUS_ENUMS::Opcode17Type::RESPONSE            -> response          : General_Response();
        # all other responses have no data
    };
};

type General_Response = unit {
    # response has no fields
};

type LoginRequest = unit(op17Type: ROC_PLUS_ENUMS::Opcode17Type, dataLength: uint8) {
    switch (op17Type) {
        ROC_PLUS_ENUMS::Opcode17Type::STANDARD_LOGIN  -> standardLogin  : Standard_Login();
        ROC_PLUS_ENUMS::Opcode17Type::STANDARD_LOGOUT -> standardLogout : Standard_Logout();
        ROC_PLUS_ENUMS::Opcode17Type::SESSION_KEY_REQ -> sessionKeyReq  : Session_Key_Req();
        ROC_PLUS_ENUMS::Opcode17Type::ENHANCED_LOGIN  -> enhancedLogin  : Enhanced_Login();
        ROC_PLUS_ENUMS::Opcode17Type::ENHANCED_LOGOUT -> enhancedLogout : Enhanced_Logout();
        ROC_PLUS_ENUMS::Opcode17Type::UNKNOWN         -> unknown        : Unknown(dataLength);
    };
};

type Unknown = unit(dataLength: uint8) {
    data : bytes &size=(dataLength - 1) &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
};

type Standard_Login = unit {
    operatorId  : bytes &size=3 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
    password    : uint16;
    accessLevel : uint8;
};

type Standard_Logout = unit {
    operatorId   : bytes &size=3 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
    password     : uint16;
    logoutString : bytes &size=6 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
};

type Enhanced_Login = unit {
    operatorId  : bytes &size=30 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
    password    : bytes &size=40 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
    accessLevel : uint8;
};

type Enhanced_Logout = unit {
    operatorId   : bytes &size=30 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
    password     : bytes &size=40 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
    logoutString : bytes &size=6 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
};

type Session_Key_Req = unit {
    sessionKeyString : bytes &size=13 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);

    # on %done {
    #     print self;
    # }
};

type Wrapped_Session_Key = unit {
    wrappedSessionKey : bytes &size=24 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);

    # on %done {
    #     print self;
    # }
};