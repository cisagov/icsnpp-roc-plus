module ROC_PLUS_OPCODE_118;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_FUNCTIONS;

type RequestAlarmData_AlarmData = unit {
    data : bytes &size=23 &convert=ROC_PLUS_FUNCTIONS::bytesToHexString($$);
};

type RequestAlarmData = unit(packetType: ROC_PLUS_ENUMS::PacketType, dataLength : uint8) {
    switch(packetType) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : RequestAlarmData_Request();
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : RequestAlarmData_Response(dataLength);
        ROC_PLUS_ENUMS::PacketType::UNKNOWN  -> unknown  : RequestAlarmData_Unknown();
    };
};

type RequestAlarmData_Unknown = unit {
    # This opcode should always be a request or a response
};

type RequestAlarmData_Request = unit {
    numAlarmsRequested     : uint8;
    startingAlarmIndexReq  : uint16;
};

type RequestAlarmData_Response = unit(dataLength: uint8) {
    numAlarmsSent          : uint8;
    startingAlarmIndexRes  : uint16;
    currentAlarmIndex      : uint16;
    alarmData              : RequestAlarmData_AlarmData[(dataLength - 5)];
};