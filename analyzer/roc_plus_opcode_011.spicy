module ROC_PLUS_OPCODE_011;

import spicy;
import ROC_PLUS_ENUMS;
import ROC_PLUS_GLOBALS;

type WriteConfigurableOpcodePointData = unit(dataLength : uint8) {
    switch(ROC_PLUS_GLOBALS::PACKET_TYPE_GLOBAL) {
        ROC_PLUS_ENUMS::PacketType::REQUEST  -> request  : WriteConfigurableOpcodePointDataRequest(dataLength);
        ROC_PLUS_ENUMS::PacketType::RESPONSE -> response : WriteConfigurableOpcodePointDataResponse();
};
};

type WriteConfigurableOpcodePointDataRequest = unit(dataLength : uint8) {
    tableNumber           : uint8;
    startingTableLocation : uint8;
    numTableLocations     : uint8;
    data                  : bytes &size=(dataLength - 3); # Subtract previous fields in bytes
};

type WriteConfigurableOpcodePointDataResponse = unit {
    # Response response does not contain any data
};
